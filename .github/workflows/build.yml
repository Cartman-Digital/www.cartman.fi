name: Build uberjar

on:
  push:
    branches:
      - main

env:
  REGISTRY: europe-north1-docker.pkg.dev/www-cartman-fi/site
  IMAGE_NAME: app

jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v3

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Prepare java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Install clojure tools
      uses: DeLaGuardo/setup-clojure@10.3
      with:
        # Install just one or all simultaneously
        # The value must indicate a particular version of the tool, or use 'latest'
        # to always provision the latest version
        cli: 1.11.1.1273              # Clojure CLI based on tools.deps

    - name: Create uberjar
      run: clojure -T:build uber

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 416.0.0'
        skip_install: true

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/43005639550/locations/global/workloadIdentityPools/github/providers/github'
        service_account: 'github-uploader@www-cartman-fi.iam.gserviceaccount.com'
        token_format: 'access_token'

    - name: Login to Google Artifact Registry
      uses: docker/login-action@v2.0.0
      with:
        registry: europe-north1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
        logout: false

    - name: Setup docker
      uses: docker/setup-buildx-action@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push
      id: build-docker
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Trigger static generation
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'generate.yml',
            ref: 'main',
          })

    - name: Deploy Cloud run
      uses: 'google-github-actions/deploy-cloudrun@v1'
      with:
        service: app
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-docker.outputs.digest }}
        region: europe-north1

