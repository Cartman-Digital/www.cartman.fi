name: Generate site

on:
  repository_dispatch:
    types: [contentful.deploy]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  generate:
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: repo

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: USER
          server-password: TOKEN

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/43005639550/locations/global/workloadIdentityPools/github/providers/github'
          service_account: 'github-uploader@www-cartman-fi.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: Restore jar cache
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: generator.jar
          key: ${{ github.sha }}

      - name: Login to Google Artifact Registry
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2.0.0
        with:
          registry: europe-north1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          logout: false

      - name: extract-jar
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          docker cp $(docker create europe-north1-docker.pkg.dev/www-cartman-fi/site/app:main):/app/generator.jar generator.jar

      - name: Save jar cache
        if: steps.restore-cache.outputs.cache-hit != 'true'
        id: cache-jar
        uses: actions/cache/save@v3
        with:
          path: generator.jar
          key: ${{ github.sha }}

      - name: Generate
        run: java -jar generator.jar -generate
        env:
          CONTENTFUL_ENVIRONMENT: "${{ vars.CONTENTFUL_ENVIRONMENT }}"
          CONTENTFUL_SPACE: "${{ vars.CONTENTFUL_SPACE }}"
          CONTENTFUL_TOKEN: "${{ secrets.CONTENTFUL_TOKEN }}"
          BASE_URL: "${{ vars.BASE_URL }}"
          CAPTCHA_PUBLIC_KEY: "${{ vars.CAPTCHA_PUBLIC_KEY }}"

      - name: Move static assets
        run: mv repo/resources/public/* build/

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 416.0.0'
          skip_install: true

      - name: Upload
        run: gsutil -m rsync -d -r build gs://www-cartman-fi-prod
      
      - name: Set metadata
        run: |
          gsutil -m setmeta -h "Cache-Control:public, max-age=120, s-maxage=120" -h "Content-Language:en" "gs://www-cartman-fi-prod/**/*.html" && \
          gsutil -m setmeta -h "Cache-Control:public, max-age=86400, s-maxage=86400" "gs://www-cartman-fi-prod/assets/*.css" && \
          gsutil -m setmeta -h "Cache-Control:public, max-age=3600, s-maxage=86400" "gs://www-cartman-fi-prod/assets/**/*.png" || true && \
          gsutil -m setmeta -h "Cache-Control:public, max-age=3600, s-maxage=86400" "gs://www-cartman-fi-prod/assets/**/*.jpg" || true && \
          gsutil -m setmeta -h "Cache-Control:public, max-age=3600, s-maxage=86400" "gs://www-cartman-fi-prod/assets/**/*.svg" || true && \
          gsutil -m setmeta -h "Cache-Control:public, max-age=10800, s-maxage=10800" "gs://www-cartman-fi-prod/sitemap.xml"
          gsutil -m setmeta -h "Cache-Control:public, max-age=10800, s-maxage=10800" "gs://www-cartman-fi-prod/robots.txt"

      # No need after static content versioning
      # - name: Invalidate CDN cache
      #   run: gcloud --project www-cartman-fi compute url-maps invalidate-cdn-cache site --path "/*" --async